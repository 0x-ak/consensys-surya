#!/usr/bin/env node

const { describe, graph, inheritance, parse, ftrace } = require('../lib/index')

require('yargs') // eslint-disable-line
  .usage('$0 <cmd> [args]')
  .command('describe <files..>', 'show file contracts structure.', (yargs) => {
    yargs
      .positional('files', {
        describe: 'files to analyze',
        type: 'string'
      })
  }, (argv) => {
    describe(argv.files)
  })
  .command('graph <files..>', 'generate graph of contract function calls.', (yargs) => {
    yargs
      .positional('files', {
        describe: 'files to analyze',
        type: 'string'
      })
  }, (argv) => {
    graph(argv.files)
  })
  .command('inheritance <files..>', 'generate graph of contract inheritance tree.', (yargs) => {
    yargs
      .positional('files', {
        describe: 'files to analyze',
        type: 'string'
      })
  }, (argv) => {
    inheritance(argv.files)
  })
  .command('parse <file>', 'output AST generated by the parser for the specified file in a textual tree format.', (yargs) => {
    yargs
      .positional('file', {
        describe: 'file to parse',
        type: 'string'
      })
  }, (argv) => {
    parse(argv.file)
  })
  .command('ftrace <function_identifier> <function_visibility_restrictor> <files..>', 'output the selected function call trace in a textual tree format. External calls are marked in `orange` and internal calls are `uncolored`.', (yargs) => {
    yargs
      .positional('function_identifier', {
        describe: 'function to traverse (e.g.: "CONTRACT::FUNCTION")',
        type: 'string'
      })
      .positional('function_visibility_restrictor', {
        describe: 'type of call to traverse [all|external|internal]',
        type: 'string',
        default: 'all'
      })
      .positional('files', {
        describe: 'files to include in the parsing',
        type: 'string'
      })
  }, (argv) => {
    ftrace(argv.function_identifier, argv.function_visibility_restrictor, argv.files)
  })
  .help()
  .alias('h', 'help')
  .version()
  .alias('v', 'version')
  .argv
